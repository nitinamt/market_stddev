name: S&P 500 Monitor with Web Dashboard
on:
  schedule:
    # Run every hour from 9 AM to 4 PM ET, Monday to Friday
    - cron: '0 14-21 * * 1-5'  # UTC time (ET + 5 hours)
  workflow_dispatch:  # Allow manual trigger

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install yfinance pandas numpy matplotlib plotly seaborn pytz
        
    - name: Run S&P 500 analysis (Full Version)
      run: |
        python sp500_monitor.py || echo "Full version failed, trying simple version"
        
    - name: Run Simple Dashboard (Backup)
      run: |
        python simple_dashboard.py
        
    - name: Create temporary deployment directory
      run: |
        # Create temp directory outside of git repo
        mkdir -p /tmp/website-deploy
        
        # Copy generated files to temp directory
        echo "Copying generated files to temp directory..."
        cp *.html /tmp/website-deploy/ 2>/dev/null || echo "No HTML files found"
        cp *.png /tmp/website-deploy/ 2>/dev/null || echo "No PNG files found"  
        cp *.json /tmp/website-deploy/ 2>/dev/null || echo "No JSON files found"
        cp *.log /tmp/website-deploy/ 2>/dev/null || echo "No LOG files found"
        
        # Create index.html
        if [ -f "/tmp/website-deploy/sp500_dashboard.html" ]; then
          cp /tmp/website-deploy/sp500_dashboard.html /tmp/website-deploy/index.html
          echo "Created index.html from sp500_dashboard.html"
        else
          echo "<html><head><title>S&P 500 Dashboard</title></head><body><h1>Dashboard Error</h1><p>Dashboard file not found</p><p>Generated: $(date)</p></body></html>" > /tmp/website-deploy/index.html
          echo "Created fallback index.html"
        fi
        
        # List contents
        echo "Files prepared for deployment:"
        ls -la /tmp/website-deploy/
        
    - name: Verify source files are safe
      run: |
        echo "=== VERIFYING SOURCE FILES ARE INTACT ==="
        echo "Workflow file exists: $(test -f .github/workflows/*.yml && echo 'YES' || echo 'NO')"
        echo "Python files exist: $(ls *.py 2>/dev/null | wc -l) files found"
        echo "Current directory contents:"
        ls -la
        echo "Current git branch: $(git branch --show-current)"
        
    - name: Deploy to GitHub Pages (SAFE METHOD)
      run: |
        # Configure git
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        
        # Show current status for debugging
        echo "Current git status before cleanup:"
        git status
        echo "Generated files in current directory:"
        ls -la *.html *.png *.json *.log 2>/dev/null || echo "No generated files found"
        
        # Clean up generated files that would conflict with gh-pages branch
        # These files are already copied to /tmp/website-deploy/ so we can safely remove them
        echo "Removing generated files from main branch working directory..."
        rm -f *.html *.png *.json *.log 2>/dev/null || true
        
        # Clean any other untracked files that might conflict
        git clean -fd
        
        # Fetch all remote branches
        git fetch origin
        
        # Handle gh-pages branch
        if git show-ref --verify --quiet refs/remotes/origin/gh-pages; then
          echo "Remote gh-pages branch exists, checking it out"
          git checkout -B gh-pages origin/gh-pages
        elif git show-ref --verify --quiet refs/heads/gh-pages; then
          echo "Local gh-pages branch exists, switching to it" 
          git checkout gh-pages
        else
          echo "Creating new orphaned gh-pages branch"
          git checkout --orphan gh-pages
        fi
        
        # Clear existing content in gh-pages branch
        echo "Clearing existing content in gh-pages branch..."
        git rm -rf . 2>/dev/null || true
        
        # Copy NEW website files from temp directory
        if [ "$(ls -A /tmp/website-deploy/ 2>/dev/null)" ]; then
          echo "Copying FRESH generated files from temp directory..."
          cp /tmp/website-deploy/* . 2>/dev/null || echo "Copy failed"
          echo "Fresh files copied to gh-pages branch"
          echo "Current directory contents:"
          ls -la
          echo "Verifying dashboard file:"
          if [ -f "sp500_dashboard.html" ]; then
            echo "✓ Dashboard file exists and is $(wc -c < sp500_dashboard.html) bytes"
          else
            echo "✗ Dashboard file missing!"
          fi
        else
          echo "No files found in temp directory"
          echo "<html><body><h1>Error</h1><p>No dashboard files generated</p></body></html>" > index.html
        fi
        
        # Add all new files
        git add .
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to deploy"
        else
          # Commit and push
          git commit -m "Deploy S&P 500 dashboard - $(date -u)"
          echo "Attempting to push updated dashboard..."
          
          # Try normal push first, then force push if needed
          if git push origin gh-pages; then
            echo "Successfully pushed UPDATED dashboard to gh-pages"
          else
            echo "Normal push failed, trying force push..."
            git push --force-with-lease origin gh-pages || git push --force origin gh-pages
            echo "Force push of UPDATED dashboard completed"
          fi
        fi
        
        # Switch back to main branch
        echo "Switching back to main branch..."
        git checkout main
        
        # DO NOT restore old files - let the fresh generated files stay in temp directory
        echo "Deployment complete, back on main branch"
        echo "Fresh dashboard files are now live on gh-pages branch"
        
    - name: Final verification
      run: |
        echo "=== FINAL VERIFICATION ==="
        echo "Current branch: $(git branch --show-current)"
        echo "Source files still exist:"
        ls -la .github/workflows/*.yml 2>/dev/null || echo "ERROR: Workflow file missing!"
        ls -la *.py 2>/dev/null || echo "ERROR: Python files missing!"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sp500-analysis-${{ github.run_number }}
        path: /tmp/website-deploy/
